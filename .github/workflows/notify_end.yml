---
on:
  workflow_call:
    inputs:
      BRANCH:
        required: false
        type: string
        default: "main"
      ENVIRONMENT:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_REGION:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SLACK_APP_BENDER_TOKEN:
        required: true

name: notify end

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    outputs:
      slack_message_ts: ${{ steps.set_artifacts_outputs.outputs.slack_message_ms }}
      slack_channel: ${{ steps.set_artifacts_outputs.outputs.slack_message }}
    steps:
      - name: Get the artifacts from the right worfklow
        id: select_environment
        run: |
          if grep -w -q "pro" <<< "${{ inputs.ENVIRONMENT }}"; then
            echo "::set-output name=environment::production"
          elif grep -w -q "sta" <<< "${{ inputs.ENVIRONMENT }}"; then
            echo "::set-output name=environment::staging"
          else
            echo "::set-output name=environment::sandbox"
          fi

      - name: Download pass-slack-data artifact
        if: startsWith( ${{ github.repository }}, "frontend-" )
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: statics-${{ steps.select_environment.outputs.environment }}.yml
          github_token: ${{ secrets.PRIVATE_REPO_ACCESS }}
          name: pass-slack-data
          repo: ${{ github.repository }}
          branch: RITMO-2914/add-slack-notifications-for-frontend

      - name: Download pass-slack-data artifact
        if: startsWith( ${{ github.repository }}, "backend-" )
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: service-${{ steps.select_environment.outputs.environment }}.yml
          github_token: ${{ secrets.PRIVATE_REPO_ACCESS }}
          name: pass-slack-data
          repo: ${{ github.repository }}
          branch: RITMO-2914/add-slack-notifications-for-frontend

      - name: Convert artifacts to outputs
        id: set_artifacts_outputs
        run: |
          echo "::set-output name=slack_message_ms::$(<pass-slack-data/slack_message_ts.txt)"
          echo "::set-output name=slack_channel::$(<pass-slack-data/slack_channel.txt)"
          echo "::set-output name=slack_channel_type:::$(<pass-slack-data/slack_channel_type.txt)"

      - name: Check outputs
        run: |
          echo "Slack Message Ts output > ${{ steps.set_artifacts_outputs.outputs.slack_message_ts }} "
          echo "Slack Channel output > ${{ steps.set_artifacts_outputs.outputs.slack_channel }} "
          echo "Slack Channel Type output > ${{ steps.set_artifacts_outputs.outputs.slack_channel_type }} "

  notify:
    name: notify
    runs-on: ubuntu-latest
    needs:
      - prepare
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      SLACK_MESSAGE_TS: ${{ needs.prepare.outputs.slack_message_ts }}
      SLACK_CHANNEL: ${{ needs.prepare.outputs.slack_channel }}
    steps:
      - name: Notify OK
        if: needs.deploy.outputs.deployment_status == 'success'
        id: slack_notify_ok_sta
        uses: archive/github-actions-slack@master
        with:
          slack-function: send-reaction
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_APP_BENDER_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-emoji-name: thumbsup
          slack-message-timestamp: ${{ env.SLACK_MESSAGE_TS }}

      - name: Notify OK
        if: needs.deploy.outputs.deployment_status == 'success'
        id: slack_notify_ok_sbx
        uses: archive/github-actions-slack@master
        with:
          slack-function: send-reaction
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_APP_BENDER_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-emoji-name: thumbsup
          slack-message-timestamp: ${{ env.SLACK_MESSAGE_TS }}


