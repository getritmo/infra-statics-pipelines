---
on:
  workflow_call:
    inputs:
      BRANCH:
        required: false
        type: string
        default: "main"
      ENVIRONMENT:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_REGION:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SLACK_APP_BENDER_TOKEN:
        required: true

name: notify end

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    outputs:
      slack_message_ts: ${{ steps.set_artifacts_outputs.outputs.slack_message_ms }}
      slack_channel: ${{ steps.set_artifacts_outputs.outputs.slack_channel }}
      build_status: ${{ steps.set_artifacts_outputs.outputs.build_status }}
      deploy_status: ${{ steps.set_artifacts_outputs.outputs.deploy_status }}
      distribute_status: ${{ steps.set_artifacts_outputs.outputs.distribute_status }}
      tag_status: ${{ steps.set_artifacts_outputs.outputs.tag_status }}
    steps:
      - name: Get the artifacts from the right worfklow
        id: select_environment
        run: |
          if grep -w -q "pro" <<< "${{ inputs.ENVIRONMENT }}"; then
            echo "::set-output name=environment::production"
          elif grep -w -q "sta" <<< "${{ inputs.ENVIRONMENT }}"; then
            echo "::set-output name=environment::staging"
          else
            echo "::set-output name=environment::sandbox"
          fi

      - name: Download pass-slack-data artifact
        if: startsWith( ${{ github.repository }}, "frontend-" )
        uses: dawidd6/action-download-artifact@v2
        #nasty behavior but....
        continue-on-error: true
        with:
          workflow_conclusion: completed
          search_artifacts: true
          workflow: statics-${{ steps.select_environment.outputs.environment }}.yml
          github_token: ${{ secrets.PRIVATE_REPO_ACCESS }}
          path: ./slack_data
          name: pass-slack-data
          repo: ${{ github.repository }}

      - name: Download pass-slack-data artifact
        if: startsWith( ${{ github.repository }}, "backend-" ) || contains( ${{ github.repositoy }}, 'devops')
        uses: dawidd6/action-download-artifact@v2
        #nasty behavior but....
        continue-on-error: true
        with:
          workflow_conclusion: completed
          search_artifacts: true
          workflow: service-${{ steps.select_environment.outputs.environment }}.yml
          github_token: ${{ secrets.PRIVATE_REPO_ACCESS }}
          name: pass-slack-data
          path: ./slack_data
          repo: ${{ github.repository }}

      - name: Convert artifacts to outputs
        id: set_artifacts_outputs
        run: |
          ls -alrt
          echo "::set-output name=slack_message_ts::$(<$PWD/slack_data/slack_message_ts.txt)"
          echo "::set-output name=slack_channel::$(<$PWD/slack_data/slack_channel.txt)"
          echo "::set-output name=build_status::$(<$PWD/slack_data/build_status.txt)"
          echo "::set-output name=deploy_status::$(<$PWD/slack_data/deploy_status.txt)"
          echo "::set-output name=distribute_status::$(<$PWD/slack_data/distribute_status.txt)"
          echo "::set-output name=tag_status::$(<$PWD/slack_data/tag_status.txt)"

      - name: Check outputs
        run: |
          ls -alrt
          echo "Slack message ts > ${{ steps.set_artifacts_outputs.outputs.slack_message_ts }}"
          echo "Slack channel > ${{ steps.set_artifacts_outputs.outputs.slack_channel }}"
          echo "Build status > ${{ steps.set_artifacts_outputs.outputs.build_status }}"
          echo "Deploy status > ${{ steps.set_artifacts_outputs.outputs.deploy_status }}"
          echo "Distribute status > ${{ steps.set_artifacts_outputs.outputs.distribute_status }}"
          echo "Tag status > ${{ steps.set_artifacts_outputs.outputs.tag_status }}"

  notify:
    name: notify
    runs-on: ubuntu-latest
    needs:
      - prepare
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      SLACK_MESSAGE_TS: ${{ needs.prepare.outputs.slack_message_ts || 'null' }}
      SLACK_CHANNEL: ${{ needs.prepare.outputs.slack_channel || 'null' }}
      BUILD_STATUS: ${{ needs.prepare.outputs.outputs.build_status || 'null' }}
      DEPLOY_STATUS: ${{  needs.prepare.outputs.deploy_status || 'null' }}
      DISTRIBUTE_STATUS: ${{ needs.prepare.outputs.distribute_status 'null' }}
      TAG_STATUS: ${{ needs.prepare.outputs.tag_status }}
    steps:
      - name: Select notification reaction
        id: notify_reaction
        run: |
          if grep -w -q "success" <<< "${{ env.DISTRIBUTE_STATUS }}"; then
            echo "::set-output name=reaction::thumsbup"
          elif grep -w -q "success" <<< "${{ env.DEPLOY_STATUS }}"; then
            echo "::set-output name=reaction::thumsbup"
          elif grep -w -q "success" <<< "${{ env.TAG_STATUS }}"; then
            echo "::set-output name=reaction::thumsbup"
          else
            echo "::set-output name=reaction::emofire"
          fi
      - name: Notify end
        id: slack_notify_good
        uses: archive/github-actions-slack@master
        with:
          slack-function: send-reaction
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_APP_BENDER_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-emoji-name: ${{ steps.notify_reaction.outputs.reaction }}
          slack-message-timestamp: ${{ env.SLACK_MESSAGE_TS }}
